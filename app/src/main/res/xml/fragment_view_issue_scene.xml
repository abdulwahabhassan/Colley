<?xml version="1.0" encoding="utf-8"?>
<MotionScene xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:motion="http://schemas.android.com/apk/res-auto"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <Transition
        motion:constraintSetEnd="@+id/end"
        motion:constraintSetStart="@id/start"
        motion:duration="1000">
       <KeyFrameSet>
       </KeyFrameSet>
        <OnSwipe motion:touchAnchorId="@+id/linearLayoutCompat" />
    </Transition>

    <ConstraintSet android:id="@+id/start" >
        <Constraint android:id="@+id/issueCommentsSwipeRefreshLayout">
            <PropertySet
                app:applyMotionScene="false"
                app:visibilityMode="ignore" />
        </Constraint>
        <Constraint android:id="@+id/noCommentsLayout">
            <PropertySet
                app:applyMotionScene="false"
                app:visibilityMode="ignore" />
        </Constraint>
        <Constraint android:id="@+id/newCommentNotificationTextView">
            <PropertySet
                app:applyMotionScene="false"
                app:visibilityMode="ignore" />
        </Constraint>
    </ConstraintSet>

    <ConstraintSet android:id="@+id/end" motion:deriveConstraintsFrom="@id/start">
        <Constraint
            android:id="@+id/constraintLayout"
            motion:layout_constraintEnd_toEndOf="parent"
            android:layout_width="@dimen/width_0dp"
            android:layout_height="@dimen/height_0dp"
            motion:layout_constraintTop_toTopOf="parent"
            motion:layout_constraintStart_toStartOf="parent"
            android:alpha="0" />

    </ConstraintSet>
</MotionScene>

<!--By default MotionLayout controls the visibility of all views within it. Hence any child view in
motion layout ignores setVisibility. But you can opt out child view by using the
app:visibilityMode="ignore" so that it is no longer under the control motion layout, setting
app:applyMotionScene="false" ignores the visibility from the scene -->